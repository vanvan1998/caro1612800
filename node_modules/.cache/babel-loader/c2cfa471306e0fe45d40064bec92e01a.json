{"ast":null,"code":"import _defineProperty from \"D:\\\\react\\\\caro1612800\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as types from '../constants/constants';\nconst initialState = {\n  isGame: false\n};\n\nconst InfoReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.playGame:\n      {\n        const st = _objectSpread({}, state);\n\n        st.isGame = true;\n        return st;\n      }\n\n    case types.playGame:\n      {\n        const st = _objectSpread({}, state);\n\n        st.isGame = true;\n        return st;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default InfoReducer;","map":{"version":3,"sources":["D:/react/caro1612800/src/reducers/info.reducers.js"],"names":["types","initialState","isGame","InfoReducer","state","action","type","playGame","st"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,wBAAvB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE;AADW,CAArB;;AAIA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,KAAK,CAACO,QAAX;AAAqB;AACnB,cAAMC,EAAE,qBAAQJ,KAAR,CAAR;;AACAI,QAAAA,EAAE,CAACN,MAAH,GAAY,IAAZ;AACA,eAAOM,EAAP;AACD;;AACD,SAAKR,KAAK,CAACO,QAAX;AAAqB;AACnB,cAAMC,EAAE,qBAAQJ,KAAR,CAAR;;AACAI,QAAAA,EAAE,CAACN,MAAH,GAAY,IAAZ;AACA,eAAOM,EAAP;AACD;;AACD;AACE,aAAOJ,KAAP;AAZJ;AAcD,CAfD;;AAiBA,eAAeD,WAAf","sourcesContent":["import * as types from '../constants/constants';\r\n\r\nconst initialState = {\r\n  isGame: false\r\n};\r\n\r\nconst InfoReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.playGame: {\r\n      const st = { ...state };\r\n      st.isGame = true;\r\n      return st;\r\n    }\r\n    case types.playGame: {\r\n      const st = { ...state };\r\n      st.isGame = true;\r\n      return st;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default InfoReducer;\r\n"]},"metadata":{},"sourceType":"module"}