{"ast":null,"code":"import _defineProperty from \"D:\\\\react\\\\caro1612800\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as types from '../constants/constants';\nconst initialState = {\n  username: '',\n  password: '',\n  isLogin: false,\n  token: '',\n  name: '',\n  email: '',\n  dateOfBirth: '',\n  sex: ''\n};\n\nconst LoginReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.login:\n      {\n        const st = _objectSpread({}, state);\n\n        st.username = action.data.username;\n        st.password = action.data.password;\n\n        try {\n          st.token = action.data.res.data.token;\n          st.name = action.data.res.data.user.name;\n          st.email = action.data.res.data.user.email;\n          st.dateOfBirth = action.data.res.data.user.dateOfBirth;\n          st.sex = action.data.res.data.user.sex;\n          st.isLogin = true;\n        } catch (err) {\n          st.token = 'err';\n        }\n\n        return st;\n      }\n\n    case types.logOut:\n      {\n        const st = _objectSpread({}, state);\n\n        st.username = '';\n        st.token = '';\n        st.isLogin = false;\n        st.name = '';\n        st.password = '';\n        st.dateOfBirth = '';\n        st.sex = '';\n        return st;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default LoginReducer;","map":{"version":3,"sources":["D:/react/caro1612800/src/reducers/login.reducers.js"],"names":["types","initialState","username","password","isLogin","token","name","email","dateOfBirth","sex","LoginReducer","state","action","type","login","st","data","res","user","err","logOut"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,wBAAvB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,EADS;AAEnBC,EAAAA,QAAQ,EAAE,EAFS;AAGnBC,EAAAA,OAAO,EAAE,KAHU;AAInBC,EAAAA,KAAK,EAAE,EAJY;AAKnBC,EAAAA,IAAI,EAAE,EALa;AAMnBC,EAAAA,KAAK,EAAE,EANY;AAOnBC,EAAAA,WAAW,EAAE,EAPM;AAQnBC,EAAAA,GAAG,EAAE;AARc,CAArB;;AAWA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGV,YAAT,EAAuBW,MAAvB,KAAkC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKb,KAAK,CAACc,KAAX;AAAkB;AAChB,cAAMC,EAAE,qBAAQJ,KAAR,CAAR;;AACAI,QAAAA,EAAE,CAACb,QAAH,GAAcU,MAAM,CAACI,IAAP,CAAYd,QAA1B;AACAa,QAAAA,EAAE,CAACZ,QAAH,GAAcS,MAAM,CAACI,IAAP,CAAYb,QAA1B;;AACA,YAAI;AACFY,UAAAA,EAAE,CAACV,KAAH,GAAWO,MAAM,CAACI,IAAP,CAAYC,GAAZ,CAAgBD,IAAhB,CAAqBX,KAAhC;AACAU,UAAAA,EAAE,CAACT,IAAH,GAAUM,MAAM,CAACI,IAAP,CAAYC,GAAZ,CAAgBD,IAAhB,CAAqBE,IAArB,CAA0BZ,IAApC;AACAS,UAAAA,EAAE,CAACR,KAAH,GAAWK,MAAM,CAACI,IAAP,CAAYC,GAAZ,CAAgBD,IAAhB,CAAqBE,IAArB,CAA0BX,KAArC;AACAQ,UAAAA,EAAE,CAACP,WAAH,GAAiBI,MAAM,CAACI,IAAP,CAAYC,GAAZ,CAAgBD,IAAhB,CAAqBE,IAArB,CAA0BV,WAA3C;AACAO,UAAAA,EAAE,CAACN,GAAH,GAASG,MAAM,CAACI,IAAP,CAAYC,GAAZ,CAAgBD,IAAhB,CAAqBE,IAArB,CAA0BT,GAAnC;AACAM,UAAAA,EAAE,CAACX,OAAH,GAAa,IAAb;AACD,SAPD,CAOE,OAAOe,GAAP,EAAY;AACZJ,UAAAA,EAAE,CAACV,KAAH,GAAW,KAAX;AACD;;AACD,eAAOU,EAAP;AACD;;AACD,SAAKf,KAAK,CAACoB,MAAX;AAAmB;AACjB,cAAML,EAAE,qBAAQJ,KAAR,CAAR;;AACAI,QAAAA,EAAE,CAACb,QAAH,GAAc,EAAd;AACAa,QAAAA,EAAE,CAACV,KAAH,GAAW,EAAX;AACAU,QAAAA,EAAE,CAACX,OAAH,GAAa,KAAb;AACAW,QAAAA,EAAE,CAACT,IAAH,GAAU,EAAV;AACAS,QAAAA,EAAE,CAACZ,QAAH,GAAc,EAAd;AACAY,QAAAA,EAAE,CAACP,WAAH,GAAiB,EAAjB;AACAO,QAAAA,EAAE,CAACN,GAAH,GAAS,EAAT;AACA,eAAOM,EAAP;AACD;;AACD;AACE,aAAOJ,KAAP;AA7BJ;AA+BD,CAhCD;;AAkCA,eAAeD,YAAf","sourcesContent":["import * as types from '../constants/constants';\r\n\r\nconst initialState = {\r\n  username: '',\r\n  password: '',\r\n  isLogin: false,\r\n  token: '',\r\n  name: '',\r\n  email: '',\r\n  dateOfBirth: '',\r\n  sex: ''\r\n};\r\n\r\nconst LoginReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.login: {\r\n      const st = { ...state };\r\n      st.username = action.data.username;\r\n      st.password = action.data.password;\r\n      try {\r\n        st.token = action.data.res.data.token;\r\n        st.name = action.data.res.data.user.name;\r\n        st.email = action.data.res.data.user.email;\r\n        st.dateOfBirth = action.data.res.data.user.dateOfBirth;\r\n        st.sex = action.data.res.data.user.sex;\r\n        st.isLogin = true;\r\n      } catch (err) {\r\n        st.token = 'err';\r\n      }\r\n      return st;\r\n    }\r\n    case types.logOut: {\r\n      const st = { ...state };\r\n      st.username = '';\r\n      st.token = '';\r\n      st.isLogin = false;\r\n      st.name = '';\r\n      st.password = '';\r\n      st.dateOfBirth = '';\r\n      st.sex = '';\r\n      return st;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default LoginReducer;\r\n"]},"metadata":{},"sourceType":"module"}