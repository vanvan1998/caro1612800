{"version":3,"sources":["reducers/Game.Reducers.js","constants/constants.js","reducers/Login.Reducers.js","reducers/Register.Reducers.js","reducers/Reducers.js","actions/actions.js","components/Board.js","components/Game.js","containers/Game.Container.js","components/login.js","containers/Login.Container.js","components/Register.js","containers/Register.Container.js","containers/containers.js","components/Router.js","serviceWorker.js","index.js"],"names":["initialState","history","squares","Array","from","stepNumber","xIsNext","col","row","Sortvalue","temp","winner","color","calculateWinner","state","st","i","j","m","handleClick","historytemp","slice","current","length","JSON","parse","stringify","concat","jumpTo","step","onclickSort","GameReducer","action","type","data","email","password","isLogin","token","username","LoginReducer","res","user","name","console","log","err","isRegister","CheckLoadRegister","RegisterReducer","myReducer","combineReducers","axios","require","loginRequest","dispatch","post","catch","error","OnclickLogin","then","login","registerRequest","OnclickRegister","register","Square","prs","className","style","onClick","value","Board","this","props","table","children","push","key","renderSquare","React","Component","Game","to","status","moves","map","move","desc","toString","fontWeight","reverse","Button","variant","Logout","sortClick","GameContainer","connect","GameState","actions","SignIn","Container","component","maxWidth","CssBaseline","Avatar","Typography","noValidate","TextField","margin","required","fullWidth","onChange","event","target","id","label","autoComplete","autoFocus","FormControlLabel","control","Checkbox","preventDefault","Login","Grid","container","item","xs","Link","href","LoginContainer","LoginState","SignUp","spacing","Register","justify","PureComponent","RegisterContainer","RegisterState","containers","path","Boolean","window","location","hostname","match","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f39c4e53.chunk.js","sourcesContent":["// import { combineReducers } from 'redux';\r\nimport * as types from '../constants/constants';\r\n\r\nconst history = [\r\n  {\r\n    squares: Array.from(Array(20), () => new Array(20))\r\n  }\r\n];\r\n\r\nconst initialState = {\r\n  history,\r\n  stepNumber: 0,\r\n  xIsNext: true,\r\n  col: [0],\r\n  row: [0],\r\n  Sortvalue: 'sorted descending',\r\n  temp: [],\r\n  winner: false,\r\n  color: 'black'\r\n};\r\n\r\nfunction calculateWinner(squares, state) {\r\n  const st = { ...state };\r\n  st.winner = false;\r\n  for (let i = 0; i < 20; i += 1) {\r\n    for (let j = 0; j < 20; j += 1) {\r\n      if (squares[i][j]) {\r\n        if (\r\n          squares[i][j] === squares[i][j + 1] &&\r\n          squares[i][j] === squares[i][j + 2] &&\r\n          squares[i][j] === squares[i][j + 3] &&\r\n          squares[i][j] === squares[i][j + 4]\r\n        ) {\r\n          if (\r\n            !(\r\n              squares[i][j + 5] &&\r\n              squares[i][j + 5] !== squares[i][j] &&\r\n              squares[i][j - 1] &&\r\n              squares[i][j - 1] !== squares[i][j]\r\n            )\r\n          ) {\r\n            st.temp[0] = i;\r\n            st.temp[1] = j;\r\n            for (let m = 2; m < 9; m += 2) {\r\n              st.temp[m] = i;\r\n              st.temp[m + 1] = j + m / 2;\r\n            }\r\n            st.winner = squares[i][j];\r\n            return st; // đường ngang\r\n          }\r\n        } else if (i < 16) {\r\n          if (\r\n            squares[i][j] === squares[i + 1][j] &&\r\n            squares[i][j] === squares[i + 2][j] &&\r\n            squares[i][j] === squares[i + 3][j] &&\r\n            squares[i][j] === squares[i + 4][j]\r\n          ) {\r\n            if (i > 14 || i < 1) {\r\n              st.temp[0] = i;\r\n              st.temp[1] = j;\r\n              for (let m = 2; m < 9; m += 2) {\r\n                st.temp[m] = i + m / 2;\r\n                st.temp[m + 1] = j;\r\n              }\r\n              st.winner = squares[i][j];\r\n              return st; // đường dọc\r\n            }\r\n            if (\r\n              !(\r\n                squares[i + 5][j] &&\r\n                squares[i + 5][j] !== squares[i][j] &&\r\n                squares[i - 1][j] &&\r\n                squares[i - 1][j] !== squares[i][j]\r\n              )\r\n            ) {\r\n              st.temp[0] = i;\r\n              st.temp[1] = j;\r\n              for (let m = 2; m < 9; m += 2) {\r\n                st.temp[m] = i + m / 2;\r\n                st.temp[m + 1] = j;\r\n              }\r\n              st.winner = squares[i][j];\r\n              return st; // đường dọc\r\n            }\r\n          } else if (\r\n            squares[i][j] === squares[i + 1][j + 1] &&\r\n            squares[i][j] === squares[i + 2][j + 2] &&\r\n            squares[i][j] === squares[i + 3][j + 3] &&\r\n            squares[i][j] === squares[i + 4][j + 4]\r\n          ) {\r\n            if (i > 14 || i < 1) {\r\n              st.temp[0] = i;\r\n              st.temp[1] = j;\r\n              for (let m = 2; m < 9; m += 2) {\r\n                st.temp[m] = i + m / 2;\r\n                st.temp[m + 1] = j + m / 2;\r\n              }\r\n              st.winner = squares[i][j];\r\n              return st; // đường chéo \\\r\n            }\r\n            if (\r\n              !(\r\n                squares[i + 5][j + 5] &&\r\n                squares[i + 5][j + 5] !== squares[i][j] &&\r\n                squares[i - 1][j - 1] &&\r\n                squares[i - 1][j - 1] !== squares[i][j]\r\n              )\r\n            ) {\r\n              st.temp[0] = i;\r\n              st.temp[1] = j;\r\n              for (let m = 2; m < 9; m += 2) {\r\n                st.temp[m] = i + m / 2;\r\n                st.temp[m + 1] = j + m / 2;\r\n              }\r\n              st.winner = squares[i][j];\r\n              return st; // đường chéo \\\r\n            }\r\n          } else if (\r\n            squares[i][j] === squares[i + 1][j - 1] &&\r\n            squares[i][j] === squares[i + 2][j - 2] &&\r\n            squares[i][j] === squares[i + 3][j - 3] &&\r\n            squares[i][j] === squares[i + 4][j - 4]\r\n          ) {\r\n            if (i < 5 || i > 18) {\r\n              st.temp[0] = i;\r\n              st.temp[1] = j;\r\n              for (let m = 2; m < 9; m += 2) {\r\n                st.temp[m] = i + m / 2;\r\n                st.temp[m + 1] = j - m / 2;\r\n              }\r\n              st.winner = squares[i][j];\r\n              return st; // đường chéo /\r\n            }\r\n            if (\r\n              !(\r\n                squares[i - 5][j + 5] &&\r\n                squares[i - 5][j + 5] !== squares[i][j] &&\r\n                squares[i + 1][j - 1] &&\r\n                squares[i + 1][j - 1] !== squares[i][j]\r\n              )\r\n            ) {\r\n              st.temp[0] = i;\r\n              st.temp[1] = j;\r\n              for (let m = 2; m < 9; m += 2) {\r\n                st.temp[m] = i + m / 2;\r\n                st.temp[m + 1] = j - m / 2;\r\n              }\r\n              st.winner = squares[i][j];\r\n              return st; // đường chéo /\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return st;\r\n}\r\n\r\nfunction handleClick(i, j, state) {\r\n  const st = { ...state };\r\n  const historytemp = st.history.slice(0, st.stepNumber + 1);\r\n  const col = st.col.slice(0, st.stepNumber + 1);\r\n  const row = st.row.slice(0, st.stepNumber + 1);\r\n  const current = historytemp[historytemp.length - 1];\r\n  const squares = JSON.parse(JSON.stringify(current.squares));\r\n  const sttemp = calculateWinner(squares, st);\r\n  if (sttemp.winner || squares[i][j]) {\r\n    return st;\r\n  }\r\n\r\n  squares[i][j] = st.xIsNext ? 'X' : 'O';\r\n\r\n  st.history = historytemp.concat([\r\n    {\r\n      squares\r\n    }\r\n  ]);\r\n  st.stepNumber = historytemp.length;\r\n  st.xIsNext = !st.xIsNext;\r\n  st.col = col.concat(i + 1);\r\n  st.row = row.concat(j + 1);\r\n  return st;\r\n}\r\n\r\nfunction jumpTo(step, state) {\r\n  const st = { ...state };\r\n\r\n  st.stepNumber = step;\r\n  st.xIsNext = step % 2 === 0;\r\n  return st;\r\n}\r\n\r\nfunction onclickSort(Sortvalue, state) {\r\n  const st = { ...state };\r\n  if (Sortvalue === 'sorted descending') {\r\n    st.Sortvalue = 'Sort ascending';\r\n  } else {\r\n    st.Sortvalue = 'sorted descending';\r\n  }\r\n  return st;\r\n}\r\n\r\nconst GameReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.boardClick: {\r\n      return handleClick(action.data.i, action.data.j, state);\r\n    }\r\n    case types.goToMoveClick: {\r\n      return jumpTo(action.data.step, state);\r\n    }\r\n    case types.checkWinner: {\r\n      return calculateWinner(action.data.squares, state);\r\n    }\r\n    case types.sortClick: {\r\n      return onclickSort(state.Sortvalue, state);\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default GameReducer;\r\n","export const boardClick = 'BOARD_CLICK';\r\n\r\nexport const checkWinner = 'WINNER';\r\n\r\nexport const goToMoveClick = 'GO_TO_MOVE_CLICK';\r\n\r\nexport const sortClick = 'SORT_CLICK';\r\n\r\nexport const register = 'REGISTER';\r\n\r\nexport const login = 'LOGIN';\r\n\r\nexport const logOut = 'LOGOUT';\r\n","import * as types from '../constants/constants';\r\n\r\n// const axios = require('axios');\r\n\r\nconst initialState = {\r\n  email: '',\r\n  password: '',\r\n  isLogin: false,\r\n  token: '',\r\n  username: ''\r\n};\r\n\r\nconst LoginReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.login: {\r\n      const st = { ...state };\r\n      st.email = action.data.email;\r\n      st.password = action.data.password;\r\n      try {\r\n        st.token = action.data.res.data.token;\r\n        st.username = action.data.res.data.user.name;\r\n        console.log(st);\r\n        st.isLogin = true;\r\n      } catch (err) {\r\n        st.token = 'err';\r\n      }\r\n      return st;\r\n    }\r\n    case types.logOut: {\r\n      const st = { ...state };\r\n      st.username = '';\r\n      st.token = '';\r\n      st.isLogin = false;\r\n      st.email = '';\r\n      st.password = '';\r\n      return st;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default LoginReducer;\r\n","import * as types from '../constants/constants';\r\n\r\nconst initialState = {\r\n  email: '',\r\n  password: '',\r\n  isRegister: false,\r\n  CheckLoadRegister: false,\r\n  name: ''\r\n};\r\n\r\nconst RegisterReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.register: {\r\n      const st = { ...state };\r\n      st.email = action.data.email;\r\n      st.password = action.data.password;\r\n      try {\r\n        st.name = action.data.res.data.name;\r\n        st.isRegister = true;\r\n      } catch (err) {\r\n        st.CheckLoadRegister = true;\r\n      }\r\n      return st;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default RegisterReducer;\r\n","// import { combineReducers } from 'redux';\r\nimport { combineReducers } from 'redux';\r\nimport GameReducer from './Game.Reducers';\r\nimport LoginReducer from './Login.Reducers';\r\nimport RegisterReducer from './Register.Reducers';\r\n\r\nconst myReducer = combineReducers({\r\n  GameReducer,\r\n  LoginReducer,\r\n  RegisterReducer\r\n});\r\nexport default myReducer;\r\n","import * as types from '../constants/constants';\r\n\r\nconst axios = require('axios');\r\n\r\nexport const checkWinner = squares => {\r\n  return {\r\n    type: types.checkWinner,\r\n    data: { squares }\r\n  };\r\n};\r\n\r\nexport const boardClick = (i, j) => {\r\n  return {\r\n    type: types.boardClick,\r\n    data: { i, j }\r\n  };\r\n};\r\n\r\nexport const goToMoveClick = step => {\r\n  return {\r\n    type: types.goToMoveClick,\r\n    data: { step }\r\n  };\r\n};\r\n\r\nexport const sortClick = () => {\r\n  return {\r\n    type: types.sortClick\r\n  };\r\n};\r\n\r\nfunction OnclickLogin(email, password) {\r\n  const res = axios\r\n    .post('https://restful1612800.herokuapp.com/users/login', {\r\n      email,\r\n      password\r\n    })\r\n    .catch(error => {\r\n      return error;\r\n    });\r\n  return res;\r\n}\r\n\r\nexport const login = (email, password, res) => {\r\n  return {\r\n    type: types.login,\r\n    data: { email, password, res }\r\n  };\r\n};\r\n\r\nexport const loginRequest = (email, password) => {\r\n  return dispatch => {\r\n    return OnclickLogin(email, password).then(res => {\r\n      dispatch(login(email, password, res));\r\n    });\r\n  };\r\n};\r\n\r\nfunction OnclickRegister(name, email, password) {\r\n  const res = axios\r\n    .post('https://restful1612800.herokuapp.com/users/register', {\r\n      name,\r\n      email,\r\n      password\r\n    })\r\n    .catch(error => {\r\n      return error;\r\n    });\r\n  return res;\r\n}\r\n\r\nexport const register = (name, email, password, res) => {\r\n  return {\r\n    type: types.register,\r\n    data: { name, email, password, res }\r\n  };\r\n};\r\n\r\nexport const registerRequest = (name, email, password) => {\r\n  return dispatch => {\r\n    return OnclickRegister(name, email, password).then(res => {\r\n      dispatch(register(name, email, password, res));\r\n    });\r\n  };\r\n};\r\n\r\nexport const LogOut = () => {\r\n  return {\r\n    type: types.logOut\r\n  };\r\n};\r\n","import React from 'react';\r\nimport '../App.css';\r\n\r\nfunction Square(prs) {\r\n  return (\r\n    <button\r\n      className=\"square\"\r\n      type=\"button\"\r\n      style={{ color: prs.color }}\r\n      onClick={prs.onClick}\r\n    >\r\n      {prs.value}\r\n    </button>\r\n  );\r\n}\r\n\r\nclass Board extends React.Component {\r\n  renderSquare(i, j) {\r\n    const prs = this.props;\r\n    return (\r\n      <Square\r\n        value={prs.squares[i][j]}\r\n        color={prs.color(i, j)}\r\n        onClick={() => prs.onClick(i, j)}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const table = [];\r\n\r\n    for (let i = 0; i < 20; i += 1) {\r\n      const children = [];\r\n      for (let j = 0; j < 20; j += 1) {\r\n        children.push(\r\n          <div key={j} className=\"board-row\">\r\n            {this.renderSquare(i, j)}\r\n          </div>\r\n        );\r\n      }\r\n      table.push(\r\n        <div key={i} className=\"divRow\">\r\n          {children}\r\n        </div>\r\n      );\r\n    }\r\n    return table;\r\n  }\r\n}\r\n\r\nexport default Board;\r\n","import React from 'react';\r\nimport '../App.css';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport Board from './Board';\r\n\r\nclass Game extends React.Component {\r\n  render() {\r\n    const st = this.props;\r\n    if (st.token === 'err') {\r\n      return <Redirect to=\"/login\" />;\r\n    }\r\n    if (st.token === '') {\r\n      return <Redirect to=\"/login\" />;\r\n    }\r\n    const history = st.history.slice(0, st.stepNumber + 1);\r\n    const current = history[st.stepNumber];\r\n    // temp[0] lưu giá trị i, temp[1] lưu giá trị j, temp[2] lưu giá trị loại đường thắng: 0:|; 1:--; 2:\\; 3:/\r\n    st.calculateWinner(current.squares);\r\n    const { winner } = st;\r\n    const { Sortvalue } = st;\r\n    // move: danh sách mảng 123456..\r\n    const moves = history.map((step, move) => {\r\n      const desc = move // desc lưu \"go to move ...\"\r\n        ? `Go to move [${st.col[move]}][${st.row[move].toString()}]`\r\n        : 'Go to game start';\r\n      return (\r\n        <li key={move}>\r\n          <button\r\n            type=\"button\"\r\n            style={\r\n              st.stepNumber === move\r\n                ? { fontWeight: 'bold' }\r\n                : { fontWeight: 'normal' }\r\n            }\r\n            onClick={() => st.jumpTo(move)}\r\n          >\r\n            {desc}\r\n          </button>\r\n        </li>\r\n      );\r\n    });\r\n    if (Sortvalue === 'Sort ascending') {\r\n      moves.reverse();\r\n    }\r\n    let status;\r\n    if (winner) {\r\n      status = `Winner: ${winner}`;\r\n    } else {\r\n      status = `Next step: ${st.xIsNext ? 'X' : 'O'}`;\r\n    }\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board\r\n            squares={current.squares}\r\n            color={(i, j) => {\r\n              if (winner) {\r\n                for (let m = 0; m < 9; m += 2) {\r\n                  if (i === st.temp[m] && j === st.temp[m + 1]) {\r\n                    return 'red';\r\n                  }\r\n                }\r\n              }\r\n              return 'black';\r\n            }}\r\n            onClick={(i, j) => st.handleClick(i, j)}\r\n          />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div className=\"Username\">\r\n            <h2>Người chơi : {st.username}</h2>\r\n          </div>\r\n          <br />\r\n          <div>\r\n            <h4>{status}</h4>\r\n          </div>\r\n          <br />\r\n          <center>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              type=\"button\"\r\n              onClick={() => st.Logout()}\r\n            >\r\n              Đăng xuất\r\n            </Button>\r\n          </center>\r\n          <br />\r\n          <button\r\n            type=\"button\"\r\n            className=\"buttonSort\"\r\n            onClick={() => st.sortClick()}\r\n          >\r\n            {Sortvalue}\r\n          </button>\r\n          <ol>{moves}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game;\r\n","import { connect } from 'react-redux';\r\nimport * as actions from '../actions/actions';\r\nimport Game from '../components/Game';\r\n\r\nconst mapStateToProps = state => {\r\n  const GameState = state.GameReducer;\r\n  return {\r\n    history: GameState.history,\r\n    stepNumber: GameState.stepNumber,\r\n    xIsNext: GameState.xIsNext,\r\n    col: GameState.col,\r\n    row: GameState.row,\r\n    Sortvalue: GameState.Sortvalue,\r\n    temp: GameState.temp,\r\n    winner: GameState.winner,\r\n    username: state.LoginReducer.username,\r\n    token: state.LoginReducer.token\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    handleClick: (i, j) => {\r\n      dispatch(actions.boardClick(i, j));\r\n    },\r\n    jumpTo: step => {\r\n      dispatch(actions.goToMoveClick(step));\r\n    },\r\n    sortClick: () => {\r\n      dispatch(actions.sortClick());\r\n    },\r\n    calculateWinner: squares => {\r\n      dispatch(actions.checkWinner(squares));\r\n    },\r\n    Logout: () => {\r\n      dispatch(actions.LogOut());\r\n    }\r\n  };\r\n};\r\nconst GameContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Game);\r\n\r\nexport default GameContainer;\r\n","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport '../App.css';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport default class SignIn extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.email = '';\r\n    this.password = '';\r\n    this.err = '';\r\n  }\r\n\r\n  render() {\r\n    const st = this.props;\r\n    if (st.isLogin) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n    if (st.token === 'err') {\r\n      this.err = 'Email hoặc mật khẩu không đúng!!!';\r\n    }\r\n\r\n    return (\r\n      <div className=\"loginLayout\">\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n          <CssBaseline />\r\n          <div className=\"paper\">\r\n            <center>\r\n              <Avatar className=\"avatar\">\r\n                <LockOutlinedIcon className=\"LockOutlinedIcon\" />\r\n              </Avatar>\r\n              <Typography component=\"h1\" variant=\"h5\">\r\n                Sign in\r\n              </Typography>\r\n            </center>\r\n            <form className=\"form\" noValidate>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                onChange={event => {\r\n                  this.email = event.target.value;\r\n                }}\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                autoFocus\r\n              />\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                onChange={event => {\r\n                  this.password = event.target.value;\r\n                }}\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                label=\"Remember me\"\r\n                className=\"Remember\"\r\n              />\r\n              <div className=\"Error\">{this.err}</div>\r\n              <Button\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={event => {\r\n                  event.preventDefault();\r\n                  st.Login(this.email, this.password);\r\n                }}\r\n              >\r\n                Sign In\r\n              </Button>\r\n              <Grid className=\"footer-login\" container>\r\n                <Grid item xs>\r\n                  <Link href=\"/\" variant=\"body2\">\r\n                    Forgot password?\r\n                  </Link>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Link href=\"/register\" variant=\"body2\">\r\n                    {\"Don't have an account? Sign Up\"}\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { connect } from 'react-redux';\r\nimport * as actions from '../actions/actions';\r\nimport Login from '../components/login';\r\n\r\nconst mapStateToProps = state => {\r\n  const LoginState = state.LoginReducer;\r\n  return {\r\n    email: LoginState.email,\r\n    password: LoginState.password,\r\n    isLogin: LoginState.isLogin,\r\n    token: LoginState.token\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    Login: (email, password) => {\r\n      dispatch(actions.loginRequest(email, password));\r\n    }\r\n  };\r\n};\r\nconst LoginContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Login);\r\n\r\nexport default LoginContainer;\r\n","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport '../App.css';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport default class SignUp extends React.PureComponent {\r\n  constructor() {\r\n    super();\r\n    this.email = '';\r\n    this.password = '';\r\n    this.name = '';\r\n    this.err = '';\r\n  }\r\n\r\n  render() {\r\n    const st = this.props;\r\n    if (st.isRegister) {\r\n      return <Redirect to=\"/login\" />;\r\n    }\r\n    if (st.CheckLoadRegister) {\r\n      this.err = 'Có lỗi xảy ra, vui lòng thử lại!!!';\r\n    }\r\n    return (\r\n      <div className=\"loginLayout\">\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n          <CssBaseline />\r\n          <div className=\"paper\">\r\n            <center>\r\n              <Avatar className=\"avatar\">\r\n                <LockOutlinedIcon />\r\n              </Avatar>\r\n              <Typography component=\"h1\" variant=\"h5\">\r\n                Sign up\r\n              </Typography>\r\n            </center>\r\n            <form className=\"form\" noValidate>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    autoComplete=\"name\"\r\n                    name=\"Name\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"Name\"\r\n                    onChange={event => {\r\n                      this.name = event.target.value;\r\n                    }}\r\n                    label=\"Full Name\"\r\n                    autoFocus\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"email\"\r\n                    onChange={event => {\r\n                      this.email = event.target.value;\r\n                    }}\r\n                    label=\"Email Address\"\r\n                    name=\"email\"\r\n                    autoComplete=\"email\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    onChange={event => {\r\n                      this.password = event.target.value;\r\n                    }}\r\n                    name=\"password\"\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    autoComplete=\"current-password\"\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <div className=\"ErrorRegister\">{this.err}</div>\r\n              <div className=\"GridForm\">\r\n                <Button\r\n                  fullWidth\r\n                  onClick={event => {\r\n                    event.preventDefault();\r\n                    st.Register(this.name, this.email, this.password);\r\n                  }}\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                >\r\n                  Sign Up\r\n                </Button>\r\n              </div>\r\n              <Grid container justify=\"flex-end\">\r\n                <Grid item>\r\n                  <Link href=\"/login\" variant=\"body2\">\r\n                    Already have an account? Sign in\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { connect } from 'react-redux';\r\nimport * as actions from '../actions/actions';\r\nimport Register from '../components/Register';\r\n\r\nconst mapStateToProps = state => {\r\n  const RegisterState = state.RegisterReducer;\r\n  return {\r\n    email: RegisterState.email,\r\n    password: RegisterState.password,\r\n    isRegister: RegisterState.isRegister,\r\n    name: RegisterState.name,\r\n    CheckLoadRegister: RegisterState.CheckLoadRegister\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    Register: (name, email, password) => {\r\n      dispatch(actions.registerRequest(name, email, password));\r\n    }\r\n  };\r\n};\r\nconst RegisterContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Register);\r\n\r\nexport default RegisterContainer;\r\n","import App from '../components/Router';\r\n\r\nconst containers = App;\r\n\r\nexport default containers;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport GameContainer from '../containers/Game.Container';\r\nimport LoginContainer from '../containers/Login.Container';\r\nimport RegisterContainer from '../containers/Register.Container';\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Switch>\r\n          <Route path=\"/login\">\r\n            <LoginContainer />\r\n          </Route>\r\n          <Route path=\"/Register\">\r\n            <RegisterContainer />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <GameContainer />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport './index.css';\r\nimport thunk from 'redux-thunk';\r\nimport myReducer from './reducers/Reducers';\r\nimport Container from './containers/containers';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst store = createStore(myReducer, applyMiddleware(thunk));\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Container />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}